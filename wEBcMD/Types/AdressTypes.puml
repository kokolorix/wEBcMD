@startuml
class AdressDTO {
    <<new>> + {static} TypeId : Guid <<get>>
    + <<virtual>> Name1 : String <<get>> <<set>>
    + <<virtual>> Name2 : String <<get>> <<set>>
    + <<virtual>> Adress1 : String <<get>> <<set>>
    + <<virtual>> Adress2 : String <<get>> <<set>>
    + <<virtual>> Housenumber : String <<get>> <<set>>
    + <<virtual>> City : String <<get>> <<set>>
    + <<virtual>> Postcode : String <<get>> <<set>>
}
class FindAdresses <<partial>> {
    + FindAdresses(dto:CommandDTO)
    + {static} TypeId : Guid <<get>>
    + {static} IsForMe(dto:CommandDTO) : bool
    + {static} ExecuteCommand(dto:CommandDTO) : CommandDTO
    + <<partial>> ExecuteCommand() : CommandDTO
    + <<override>> Cmd : CommandDTO <<get>> <<set>>
    + SearchText : String <<get>> <<set>>
    # _result : DTOValues<List<AdressDTO>>
    + Result : List<AdressDTO> <<get>> <<set>>
}
class GetAdress <<partial>> {
    + GetAdress(dto:CommandDTO)
    + {static} TypeId : Guid <<get>>
    + {static} IsForMe(dto:CommandDTO) : bool
    + {static} ExecuteCommand(dto:CommandDTO) : CommandDTO
    + <<partial>> ExecuteCommand() : CommandDTO
    + <<override>> Cmd : CommandDTO <<get>> <<set>>
    + Id : Guid <<get>> <<set>>
    # _result : DTOValues<AdressDTO>
    + Result : AdressDTO <<get>> <<set>>
}
class SetAdress <<partial>> {
    + SetAdress(dto:CommandDTO)
    + {static} TypeId : Guid <<get>>
    + {static} IsForMe(dto:CommandDTO) : bool
    + {static} ExecuteCommand(dto:CommandDTO) : CommandDTO
    + <<partial>> ExecuteCommand() : CommandDTO
    + <<override>> Cmd : CommandDTO <<get>> <<set>>
    + Id : Guid <<get>> <<set>>
    # _adress : DTOValues<AdressDTO>
    + Adress : AdressDTO <<get>> <<set>>
    # _result : DTOValues<AdressDTO>
    + Result : AdressDTO <<get>> <<set>>
}
class AdressTypesDispatcher <<static>> {
    + {static} Dispatch(dto:CommandDTO) : CommandDTO
}
BaseDTO <|-- AdressDTO
CommandWrapper <|-- FindAdresses
CommandWrapper <|-- GetAdress
CommandWrapper <|-- SetAdress
@enduml
