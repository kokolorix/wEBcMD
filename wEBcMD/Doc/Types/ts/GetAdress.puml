@startuml
class BaseDTO {
    +Id?: string
    +Type?: string
    +{static} TypeId: Guid
}
class AdressDTO extends BaseDTO {
    +Name1?: string
    +Name2?: string
    +Adress1?: string
    +Adress2?: string
    +Housenumber?: string
    +City?: string
    +Postcode?: string
    +{static} TypeId: Guid
}
class CommandWrapper {
    -_dto: any
    -_service: any
    +Service: any
    +DTO: any
    +Response: boolean
    +Arguments: any[]
    +Type: Guid
    +Id: Guid
    +getArgument(name: string): any
    +setArgument(name: string, value: string): void
    +executeCmd(): Promise<any>
    -{static} _factories: any
    +{static} register(typeId: Guid, factory: CommandWrapperFactory): void
}
class PropertyDTO {
    +Name?: string
    +Value?: any
    +{static} TypeId: Guid
}
class CommandDTO extends BaseDTO {
    +Response?: boolean
    +Arguments?: PropertyDTO[]
    +{static} TypeId: Guid
}
class GetAdressBase extends CommandWrapper {
    +Id: Guid
    +Id: Guid
    +Result: AdressDTO
    +execute(id: Guid): Promise<AdressDTO>
    +{static} TypeId: Guid
    +{static} IsForMe(dto: CommandDTO): any
}
CommandDTO --> "*" PropertyDTO
GetAdressBase --> "1" AdressDTO
GetAdressBase --> "1" CommandDTO
@enduml