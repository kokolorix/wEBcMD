@startuml
class AdressDTO {
}
class FindAdresses <<partial>> {
    + FindAdresses(dto:CommandDTO)
    + {static} IsForMe(dto:CommandDTO) : bool
    + {static} ExecuteCommand(dto:CommandDTO) : CommandDTO
    + <<partial>> ExecuteCommand() : CommandDTO
}
class GetAdress <<partial>> {
    + GetAdress(dto:CommandDTO)
    + {static} IsForMe(dto:CommandDTO) : bool
    + {static} ExecuteCommand(dto:CommandDTO) : CommandDTO
    + <<partial>> ExecuteCommand() : CommandDTO
}
class SetAdress <<partial>> {
    + SetAdress(dto:CommandDTO)
    + {static} IsForMe(dto:CommandDTO) : bool
    + {static} ExecuteCommand(dto:CommandDTO) : CommandDTO
    + <<partial>> ExecuteCommand() : CommandDTO
}
class AdressTypesDispatcher <<static>> {
    + {static} Dispatch(dto:CommandDTO) : CommandDTO
}
class "List`1"<T> {
}
BaseDTO <|-- AdressDTO
AdressDTO --> "TypeId" Guid
AdressDTO --> "Name1" String
AdressDTO --> "Name2" String
AdressDTO --> "Adress1" String
AdressDTO --> "Adress2" String
AdressDTO --> "Housenumber" String
AdressDTO --> "City" String
AdressDTO --> "Postcode" String
CommandWrapper <|-- FindAdresses
FindAdresses --> "TypeId" Guid
FindAdresses --> "Cmd" CommandDTO
FindAdresses --> "SearchText" String
FindAdresses --> "Result<AdressDTO>" "List`1"
CommandWrapper <|-- GetAdress
GetAdress --> "TypeId" Guid
GetAdress --> "Cmd" CommandDTO
GetAdress --> "Id" Guid
GetAdress --> "Result" AdressDTO
CommandWrapper <|-- SetAdress
SetAdress --> "TypeId" Guid
SetAdress --> "Cmd" CommandDTO
SetAdress --> "Id" Guid
SetAdress --> "Adress" AdressDTO
SetAdress --> "Result" AdressDTO
@enduml
